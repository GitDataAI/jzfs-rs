//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use crate::utils::hash::{HashVec, Hasher};
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "commits")]
pub struct Model {
    #[sea_orm(
        primary_key,
        auto_increment = false,
        column_type = "VarBinary(StringLen::None)"
    )]
    pub hash: Vec<u8>,
    #[sea_orm(primary_key, auto_increment = false)]
    pub repository_id: Uuid,
    #[sea_orm(column_type = "JsonBinary")]
    pub author: Json,
    #[sea_orm(column_type = "JsonBinary")]
    pub committer: Json,
    pub merge_tag: Option<String>,
    pub message: Option<String>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub tree_hash: Hasher,
    pub parent_hashes: Option<HashVec>,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
