//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use sea_orm::FromJsonQueryResult;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "merge_requests")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub mr_sequence: i64,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub source_repo_id: Uuid,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub target_repo_id: Uuid,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub target_branch_id: Uuid,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub source_branch_id: Uuid,
    pub title: String,
    pub merge_state: MergeState,
    pub description: Option<String>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub author_id: Uuid,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}


#[derive(Clone,Debug,PartialEq,Eq,Serialize,Deserialize,FromJsonQueryResult)]
pub enum MergeState{
    MergeStateInit = 1,
    MergeStateMerged = 2,
    MergeStateClosed = 3
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
